#    By: gdumas <gdumas@student.42.fr>              +#+  +:+       +#+         #
#    Created: 2024/03/06 13:59:53 by gdumas            #+#    #+#              #
#    Updated: 2024/04/18 11:01:16 by gdumas           ###   ########.fr        #
# Aliases #
NAME		=	minishell
IFLAGS		=	-I $(INCS) -I $(LIBFT_DIR)includes/
HEADER		=	$(addprefix $(INCS), minishell.h)
LIBFT_H		=	$(addprefix $(LIBFT_DIR)includes/, libft.h)
SRC_DIR		=	src/
# Sources & Objects #
# 				unset
				shlvl		\
				sort_env
ERROR		=	print_messages	\
# 				errors			\
# 				print_messages
				signal
MAIN		=	minishell
				lex_utils	\
PARSING		=	expansions		\
 				parser	\
				parser_utils
SRCS		=	$(addprefix $(SRC_DIR)builtins/, $(addsuffix .c, $(BUILTINS)))	\
				$(addprefix $(SRC_DIR)env/, $(addsuffix .c, $(ENV)))			\
				$(addprefix $(SRC_DIR)lexer/, $(addsuffix .c, $(LEXER)))		\
				$(addprefix $(SRC_DIR)parser/, $(addsuffix .c, $(PARSING)))		\
				$(addprefix $(SRC_DIR)error/, $(addsuffix .c, $(ERROR)))		\
				$(addprefix $(SRC_DIR)exec/, $(addsuffix .c, $(EXEC)))			\
				$(addprefix $(SRC_DIR)utils/, $(addsuffix .c, $(UTILS)))		\
				$(addprefix $(SRC_DIR), $(addsuffix .c, $(MAIN)))
OBJS		=	$(patsubst $(SRC_DIR)%.c, $(OBJ_DIR)%.o, $(SRCS))
# Rules #
				@echo "\nCompiling minishell"
				@printf "Generating minishell objects... %-33.33s\r" $@
				@make -sC libft
					make -sC libft;					\
					echo "Cleaning minishell obj/ directory";	\
				@make -sC libft clean
				@if [ -f "minishell" ]; then			\
					echo "Cleaning program: minishell";	\
				@make -sC libft fclean
